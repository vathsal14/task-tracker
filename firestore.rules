rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is an admin
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to get user's profile
    function getUserProfile() {
      return get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data;
    }

    // Profiles collection rules
    match /profiles/{userId} {
      // Users can read all profiles (for team member listing)
      allow read: if isAuthenticated();
      
      // Users can update their own profile
      allow update: if isAuthenticated() && request.auth.uid == userId;
      
      // Only admins can create/delete profiles
      allow create, delete: if isAdmin();
    }

    // Tasks collection rules
    match /tasks/{taskId} {
      // Users can read tasks they're assigned to or are admins
      allow read: if isAuthenticated() && (
        isAdmin() || 
        resource.data.assignees.hasAny([request.auth.uid]) ||
        resource.data.created_by == request.auth.uid
      );

      // Users can create tasks
      allow create: if isAuthenticated() && 
        request.resource.data.created_by == request.auth.uid;

      // Users can update tasks they're assigned to or are admins
      allow update: if isAuthenticated() && (
        isAdmin() ||
        resource.data.assignees.hasAny([request.auth.uid]) ||
        resource.data.created_by == request.auth.uid
      ) && (
        // Only admins can change status to/from 'completed'
        (isAdmin() || 
         !('status' in request.resource.data) || 
         (resource.data.status == request.resource.data.status) ||
         (request.resource.data.status != 'completed' && 
          request.resource.data.status != 'pending_approval'))
      );

      // Only admins can delete tasks
      allow delete: if isAdmin();
    }

    // Task history collection rules
    match /taskHistory/{historyId} {
      // Users can read history of tasks they're assigned to or are admins
      allow read: if isAuthenticated() && (
        isAdmin() ||
        get(/databases/$(database)/documents/tasks/$(resource.data.taskId)).data.assignees.hasAny([request.auth.uid]) ||
        get(/databases/$(database)/documents/tasks/$(resource.data.taskId)).data.created_by == request.auth.uid
      );

      // Only server-side code should be able to create history entries
      allow create: if request.auth == null || 
        request.auth.token.firebase.sign_in_provider == 'anonymous';
    }

    // Notifications collection rules
    match /notifications/{notificationId} {
      // Users can read their own notifications
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;

      // Only server-side code should be able to create/update notifications
      allow create: if request.auth == null || 
        request.auth.token.firebase.sign_in_provider == 'anonymous';
      allow update: if false; // Notifications should be immutable after creation
      allow delete: if isAdmin();
    }

    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}